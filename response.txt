---NARRATION---
The Pythagorean Theorem explains the relationship between the sides of a right triangle.
It states that the square of the hypotenuse is equal to the sum of the squares of the other two sides.
Let’s label the sides as a, b, and c, where c is the hypotenuse.
We will draw a right triangle with sides a, b, and hypotenuse c.
Next, we construct squares on each side of the triangle to visualize the theorem.
The area of the square on side a is a squared, and on side b is b squared.
The area of the square on the hypotenuse is c squared, which equals the sum of the other two squares.
This relationship helps us calculate the length of one side when the other two are known.

---MANIM---

from manim import *

class NarratedScene(Scene):
    def construct(self):
        # Step 1: Introduction text
        step1 = Text("Pythagorean Theorem relates the sides of a right triangle.")
        self.play(Write(step1))
        self.add_sound("media/audio/line_0.wav")
        self.wait(#DURATION_0#)
        self.play(FadeOut(step1))

        # Step 2: State theorem formula
        theorem_text = Text("c² = a² + b²")
        self.play(Write(theorem_text))
        self.add_sound("media/audio/line_1.wav")
        self.wait(#DURATION_1#)
        self.play(FadeOut(theorem_text))

        # Step 3: Label sides
        triangle = Polygon(ORIGIN, RIGHT*4, UP*3, color=BLUE)
        a_label = Text("a").next_to(triangle.get_edge_center(LEFT+DOWN), DOWN)
        b_label = Text("b").next_to(triangle.get_edge_center(RIGHT+DOWN), RIGHT)
        c_label = Text("c").next_to(triangle.get_edge_center(UP+RIGHT), UP+RIGHT)
        self.play(Create(triangle))
        self.play(Write(a_label), Write(b_label), Write(c_label))
        self.add_sound("media/audio/line_2.wav")
        self.wait(#DURATION_2#)

        # Step 4: Highlight triangle
        self.add_sound("media/audio/line_3.wav")
        self.wait(#DURATION_3#)

        # Step 5: Draw squares on each side
        square_a = Square(side_length=3, color=RED).next_to(triangle.get_edge_center(LEFT+DOWN), DOWN, buff=0)
        square_b = Square(side_length=4, color=GREEN).next_to(triangle.get_edge_center(RIGHT+DOWN), RIGHT, buff=0)
        square_c = Square(side_length=5, color=YELLOW).next_to(triangle.get_edge_center(UP+RIGHT), UP+RIGHT, buff=0)
        self.play(Create(square_a), Create(square_b), Create(square_c))
        self.add_sound("media/audio/line_4.wav")
        self.wait(#DURATION_4#)

        # Step 6: Show areas a² and b²
        area_a = Text("a²").move_to(square_a.get_center())
        area_b = Text("b²").move_to(square_b.get_center())
        self.play(Write(area_a), Write(area_b))
        self.add_sound("media/audio/line_5.wav")
        self.wait(#DURATION_5#)

        # Step 7: Show area c² and equality
        area_c = Text("c²").move_to(square_c.get_center())
        equation = Text("c² = a² + b²").to_edge(DOWN)
        self.play(Write(area_c), Write(equation))
        self.add_sound("media/audio/line_6.wav")
        self.wait(#DURATION_6#)

        # Step 8: Conclusion text
        conclusion = Text("This helps calculate unknown side lengths.")
        self.play(FadeOut(triangle, a_label, b_label, c_label, square_a, square_b, square_c, area_a, area_b, area_c, equation))
        self.play(Write(conclusion))
        self.add_sound("media/audio/line_7.wav")
        self.wait(#DURATION_7#)
        self.play(FadeOut(conclusion))